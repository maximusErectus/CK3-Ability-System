window = {
	#* This name is used during creation
	name = "ability_system_gui_window"
	parentanchor = center
	position = { -50 100 }
	size = { 700 400 }
	layer = top
	filter_mouse = all
	alwaystransparent = no

	using = Window_Background
	using = Window_Decoration
	movable = yes
	
	datacontext = "[GetPlayer]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	
		on_start = "[GetVariableSystem.Set( 'ability_system_gui_window_open', 'true' )]"
	}
	
	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	
		on_start = "[GetVariableSystem.Clear( 'ability_system_gui_window_open' )]"
	}

	header_standard = {
		layoutpolicy_horizontal = expanding
		size = { 625 43 }
		position = { 40 15 }

		blockoverride "header_text"
		{
			text = "ABILITY_SYSTEM_SELECT_SPELL_TEST"
		}

		blockoverride "button_close"
		{
			# Make sure this uses the name as seen at the top*
			onclick = "[GetScriptedGui('abs_cleanup').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
			onclick = "[ExecuteConsoleCommand('GUI.ClearWidgets ability_system_gui_window')]"
		}

		blockoverride "button_back"
		{
			visible = no
		}
	}
	
	scrollbox = {
		size = { 650 330 }
		position = { 30 55 }
		
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding

		blockoverride "scrollbox_content"
		{
			vbox = { margin_bottom = 20 }
			
			vbox = {
				layoutpolicy_vertical = expanding

				dynamicgridbox = {
					datamodel = "[GetPlayer.MakeScope.GetList('ability_list')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datamodel_wrap = 1
					flipdirection = yes

					item = {
						button_standard = {
							name = "ms_spell_box"
							minimumsize = { 240 0 }
							
							datacontext = "[GetScriptedGui('ability_system_ability_selector')]"
							
							#spell_icon_selector = {}

							visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('selected_ability', Scope.GetCharacter.MakeScope ).End )]"
							enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('selected_ability', Scope.GetCharacter.MakeScope ).End )]"
							tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('selected_ability', Scope.GetCharacter.MakeScope ).End )]"
							
							text = "ABS_SCOPED_ABILITY_NAME"
						}
					}
				}
			}
		}
	}
}


